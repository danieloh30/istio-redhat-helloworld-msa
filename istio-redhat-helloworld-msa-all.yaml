##################################################################################################
#  Aloha
##################################################################################################
---
apiVersion: v1
kind: Service
metadata:
  name: istio-aloha
  labels:
    app: istio-aloha
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: istio-aloha
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: istio-aloha
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: injected
        alpha.istio.io/version: jenkins@ubuntu-16-04-build-12ac793f80be71-0.1.6-dab2033
        pod.beta.kubernetes.io/init-containers: '[{"args":["-p","15001","-u","1337"],"image":"docker.io/istio/init:0.1","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"add":["NET_ADMIN"]}}},{"args":["-c","sysctl
          -w kernel.core_pattern=/tmp/core.%e.%p.%t \u0026\u0026 ulimit -c unlimited"],"command":["/bin/sh"],"image":"alpine","imagePullPolicy":"IfNotPresent","name":"enable-core-dump","securityContext":{"privileged":true}}]'
      creationTimestamp: null
      labels:
        app: istio-aloha
        version: 0.0.1
    spec:
      containers:
      - env:
        - name: JAVA_OPTIONS
          value: -Xmx256m
        - name: AB_OFF
        image: istio-aloha:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        name: vertx
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        resources: {}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --passthrough
        - "8080"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.1
        imagePullPolicy: IfNotPresent
        name: proxy
        resources: {}
        securityContext:
          runAsUser: 1337
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: istio-api-gateway
  labels:
    app: istio-api-gateway
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: istio-api-gateway
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: istio-api-gateway
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: injected
        alpha.istio.io/version: jenkins@ubuntu-16-04-build-12ac793f80be71-0.1.6-dab2033
        pod.beta.kubernetes.io/init-containers: '[{"args":["-p","15001","-u","1337"],"image":"docker.io/istio/init:0.1","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"add":["NET_ADMIN"]}}},{"args":["-c","sysctl
          -w kernel.core_pattern=/tmp/core.%e.%p.%t \u0026\u0026 ulimit -c unlimited"],"command":["/bin/sh"],"image":"alpine","imagePullPolicy":"IfNotPresent","name":"enable-core-dump","securityContext":{"privileged":true}}]'
      creationTimestamp: null
      labels:
        app: istio-api-gateway
        version: 0.0.1
    spec:
      containers:
      - env:
        - name: JAVA_OPTIONS
          value: -Xmx256m
        - name: AB_OFF
        image: istio-api-gateway:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        name: spring-boot
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        resources: {}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --passthrough
        - "8080"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.1
        imagePullPolicy: IfNotPresent
        name: proxy
        resources: {}
        securityContext:
          runAsUser: 1337
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: istio-bonjour
  labels:
    app: istio-bonjour
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: istio-bonjour
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: istio-bonjour
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: injected
        alpha.istio.io/version: jenkins@ubuntu-16-04-build-12ac793f80be71-0.1.6-dab2033
        pod.beta.kubernetes.io/init-containers: '[{"args":["-p","15001","-u","1337"],"image":"docker.io/istio/init:0.1","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"add":["NET_ADMIN"]}}},{"args":["-c","sysctl
          -w kernel.core_pattern=/tmp/core.%e.%p.%t \u0026\u0026 ulimit -c unlimited"],"command":["/bin/sh"],"image":"alpine","imagePullPolicy":"IfNotPresent","name":"enable-core-dump","securityContext":{"privileged":true}}]'
      creationTimestamp: null
      labels:
        app: istio-bonjour
        version: 0.0.1
    spec:
      containers:
      - image: istio-bonjour:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        name: nodejs
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        resources: {}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --passthrough
        - "8080"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.1
        imagePullPolicy: IfNotPresent
        name: proxy
        resources: {}
        securityContext:
          runAsUser: 1337
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: istio-hola
  labels:
    app: istio-hola
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: istio-hola
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: istio-hola
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: injected
        alpha.istio.io/version: jenkins@ubuntu-16-04-build-12ac793f80be71-0.1.6-dab2033
        pod.beta.kubernetes.io/init-containers: '[{"args":["-p","15001","-u","1337"],"image":"docker.io/istio/init:0.1","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"add":["NET_ADMIN"]}}},{"args":["-c","sysctl
          -w kernel.core_pattern=/tmp/core.%e.%p.%t \u0026\u0026 ulimit -c unlimited"],"command":["/bin/sh"],"image":"alpine","imagePullPolicy":"IfNotPresent","name":"enable-core-dump","securityContext":{"privileged":true}}]'
      creationTimestamp: null
      labels:
        app: istio-hola
        version: 0.0.1
    spec:
      containers:
      - env:
        - name: JAVA_OPTIONS
          value: -Xmx256m
        - name: AB_OFF
        image: istio-hola:0.0.1
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        name: wildfly
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 10
        resources: {}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        - --passthrough
        - "8080"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.1
        imagePullPolicy: IfNotPresent
        name: proxy
        resources: {}
        securityContext:
          runAsUser: 1337
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: istio-ola
  labels:
    app: istio-ola
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: istio-ola
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  creationTimestamp: null
  name: istio-ola
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        alpha.istio.io/sidecar: injected
        alpha.istio.io/version: jenkins@ubuntu-16-04-build-12ac793f80be71-0.1.6-dab2033
        pod.beta.kubernetes.io/init-containers: '[{"args":["-p","15001","-u","1337"],"image":"docker.io/istio/init:0.1","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"add":["NET_ADMIN"]}}},{"args":["-c","sysctl
          -w kernel.core_pattern=/tmp/core.%e.%p.%t \u0026\u0026 ulimit -c unlimited"],"command":["/bin/sh"],"image":"alpine","imagePullPolicy":"IfNotPresent","name":"enable-core-dump","securityContext":{"privileged":true}}]'
      creationTimestamp: null
      labels:
        app: istio-ola
        version: 0.0.1
    spec:
      containers:
      - env:
        - name: JAVA_OPTIONS
          value: -Xmx256m
        - name: AB_OFF
        image: istio-ola:0.0.1
        imagePullPolicy: IfNotPresent
        name: spring-boot
        ports:
        - containerPort: 8080
        resources: {}
      - args:
        - proxy
        - sidecar
        - -v
        - "2"
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        image: docker.io/istio/proxy_debug:0.1
        imagePullPolicy: IfNotPresent
        name: proxy
        resources: {}
        securityContext:
          runAsUser: 1337
status: {}
---
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: redhat-helloworld-msa
  annotations:
    kubernetes.io/ingress.class: "istio"
spec:
  rules:
  - http:
      paths:
      - path: /api/gateway
        backend:
          serviceName: api-gateway
          servicePort: 8080  
      - path: /api/bonjour
        backend:
          serviceName: bonjour
          servicePort: 8080
      - path: /api/bonjour-chaining
        backend:
          serviceName: bonjour
          servicePort: 8080
      - path: /api/aloha
        backend:
          serviceName: aloha
          servicePort: 8080
      - path: /api/aloha-chaining
        backend:
          serviceName: aloha
          servicePort: 8080
      - path: /api/ola
        backend:
          serviceName: ola
          servicePort: 8080
      - path: /api/ola-chaining
        backend:
          serviceName: ola
          servicePort: 8080
      - path: /api/hola
        backend:
          serviceName: hola
          servicePort: 8080
      - path: /api/hola-chaining
        backend:
          serviceName: hola
          servicePort: 8080

---
